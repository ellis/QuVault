diff --git a/node_modules/js-yaml/lib/js-yaml/dumper_orig.js b/node_modules/js-yaml/lib/js-yaml/dumper.js
index 26112f6..95c085f 100644
--- a/node_modules/js-yaml/lib/js-yaml/dumper_orig.js
+++ b/node_modules/js-yaml/lib/js-yaml/dumper.js
@@ -252,7 +252,7 @@ function writeScalar(state, object, level, iskey) {
   single = true;
   double = new StringBuilder(object);
 
-  sawLineFeed = false;
+  sawLineFeed = 0; // ELLIS: count line feeds
   linePosition = 0;
   longestLine = 0;
 
@@ -300,7 +300,7 @@ function writeScalar(state, object, level, iskey) {
       folded = false;
       literal = false;
     } else if (character === CHAR_LINE_FEED) {
-      sawLineFeed = true;
+      sawLineFeed++;
       single = false;
       if (position > 0) {
         previous = object.charCodeAt(position - 1);
@@ -353,15 +353,22 @@ function writeScalar(state, object, level, iskey) {
 
   // If it's literally one line, then don't bother with the literal.
   // We may still want to do a fold, though, if it's a super long line.
-  if (!sawLineFeed) {
+  if (sawLineFeed === 0) {
     literal = false;
   }
+  // ELLIS: force literal syntax in preference to folded
+  else if (literal && sawLineFeed > 1) {
+    folded = false;
+  }
+
+  //console.log({object, simple, single, folded, literal, longestLine, max, sawLineFeed})
 
   if (simple) {
     state.dump = object;
   } else if (single) {
     state.dump = '\'' + object + '\'';
   } else if (folded) {
+    if (sawLineFeed) {}
     result = fold(object, max);
     state.dump = '>' + modifier + '\n' + indentString(result, indent);
   } else if (literal) {
